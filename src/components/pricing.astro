---
const { plan } = Astro.props;
const { name, price, popular, features, button } = plan;

// Handle price display for different pricing types
let displayPrice = price;
let priceDetail: { annual: string; discount: string; original: string } | null = null;
let isCustom = typeof price === "string" && price.toLowerCase() === "custom";
let isFree = typeof price === "string" && price.toLowerCase() === "free";

if (typeof price === "object") {
  displayPrice = price.monthly;
  priceDetail = {
    annual: price.annual,
    discount: price.discount,
    original: price.original,
  };
}
---

<div class="flex flex-col w-full order-first lg:order-none border-2 border-[#D8DEE9] border-opacity-50 py-5 px-6 rounded-md relative">
  {popular && (
    <div class="absolute top-0 right-6 -translate-y-1/2">
      <span class="bg-indigo-600 text-white px-3 py-1 text-xs font-semibold rounded-full">
        Popular
      </span>
    </div>
  )}
  
  <div class="text-center">
    <h3 class="text-lg font-medium text-gray-800 mb-2">{name}</h3>
    
    <div class="mt-4 mb-6">
      {isCustom ? (
        <span class="text-4xl font-bold text-gray-900">{displayPrice}</span>
      ) : isFree ? (
        <span class="text-4xl font-bold text-gray-900">{displayPrice}</span>
      ) : (
        <div class="flex flex-col items-center">
          <div class="flex items-baseline">
            <span class="text-4xl font-bold text-gray-900">{displayPrice}</span>
            <span class="text-gray-600 ml-1">/month</span>
          </div>
          {priceDetail && (
            <div class="mt-2 text-sm text-gray-600">
              <span class="line-through">{priceDetail.original}</span>
              <span class="text-green-600 font-semibold ml-2">
                Save {priceDetail.discount}
              </span>
            </div>
          )}
        </div>
      )}
    </div>
  </div>

  <ul class="space-y-4 mb-8 flex-grow">
    {features.map((feature) => (
      <li class="flex items-start">
        <svg
          class="w-5 h-5 text-indigo-600 mr-3 flex-shrink-0 mt-0.5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M5 13l4 4L19 7"></path>
        </svg>
        <span class="text-gray-700">{feature}</span>
      </li>
    ))}
  </ul>

  <div class="mt-auto">
    <a
      href={button.link}
      class:list={[
        "block w-full text-center px-6 py-3 rounded-md font-medium transition-colors",
        popular
          ? "bg-indigo-600 text-white hover:bg-indigo-700"
          : "bg-gray-100 text-gray-900 hover:bg-gray-200",
      ]}>
      {button.text}
    </a>
  </div>
</div>
